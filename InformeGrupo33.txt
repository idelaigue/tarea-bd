                                                 Informe Grupo 33
Participantes:
- Dylhan Aros            - 201873095-5
-Ignacia Delaigue     - 201704160-9
-Gonzalo Lazen        - 201873088-2


Supuestos y Consideraciones a lo largo del trabajo: 

- La tabla "usuario" fue reecha al igual que la base de datos entera (por ello se llama posgress y no posgres), esto debido a que "id" de "usuario" tuviera caracter serial, para que fuera atomatico su uso. 

- Se cambió la cantidad de caracteres en "contraseña" debido a que al hacer hashpass, tiraba 60 caracteres. 

-Se agregó una imagen con los datos de los alumnos (nosotros) en la página principal, guardada en la carpeta img. (imagen propia).

-Se hizo uso de html para darle cierta estetica a la imagen implementada. (codigo propio)

-Se eliminó un include (por ejemplo, que se encontraba en el navbar) debido a que generaba un bucle de redireccionamiento infinito, este include estaba incluido de primera en los archivos entregados en la tarea.

-Se modifico la imagen del comienzo por otra. 

-Se modificó varias extensiones de archivo de html a php.

-Se asume que todos los días se va a ingresar los valores de las monedas, aunque estos no cambien. 
_________________________________________
                                                 MODELOS DE DATOS

Se decidió implementar para el modelo de datos, agregar una nueva columna a la tabla usuarios, donde se haría la discriminación de si es "Admin" o "Usuario". 
Ventaja: Se tomó esta decisión debido a que era menos engorroso que hacer otra tabla con la relación entre usuario y tipo de usuario, ya que de momento solo existen dos tipos de usuarios y sabemos de ante mano los permisos que tienen cada uno. 
Desventaja: El modelo es menos extendible a la larga. (En el caso de agregar más roles o tener una mayor diferenciación de permisos) 

_________________________________________
                                                       DIFICULTADES
Se nos presentó en primera instancia un poco de dificultad al momento de implementar las dependencias requeridas, habiendo varios errores, pero solucionables gracias a la guía del gitbook. 

La creación de codigos php al momento de hacer consultas y el manejo de datos, fue lo más dificil de entender y aprender al mismo tiempo. 

__________________________________________
                                                       ARCHIVOS 

-Se intentó hacer los archivos del CRUD en su parte de implementación php.

-Es satisfactorio el registro de un usuario y se conecta como deberia a la base de datos. 

-Si no se inicia sesión no es posible acceder al perfil o a la billetera.

-El perfil muestra los datos correspondientes.

-Implementamos html en el codigo de la portada para dar más estetica (+5 bonus)

-Se muestra los nombres de los administradores en la imagen principal.

-La billetera debería funcionar correctamente. 

-No se verifica que la vista sea solo para admin, más si para usuario.


__________________________________________
		EXPLICACIÓN DE LOS ARCHIVOS

Carpeta CRUD: 
Se tienen archivos para la administración de usuarios, con sus roles, monedas y asignaciones. Su función es crear usuarios, eliminar, modificar entre otros. 

CSS: 
Fuentes

IMG:
Imagenes (se agregó imagen propia)

INCLUDE: 
Header: Boostrap (diseño)
navbar: barra de navegacion de la pagina. 

SESION:
Como iniciar sesión
Como registrarse
Como validar iniciar sesión
Como validar desconectarse de la sesión

USER:
Perfil del usuario
Billetera del Usuario. 




__________________________________________
                                                   TIEMPO EN LA TAREA

Estimadores (todos medidos en horas[h]):

Ignacia Delaigue: 

Analisis del Enunciado: 1 [h]
Modifiaciones y Ajustes al Modelo: 5 [h]
Diseño de Plataforma: 5[h]
Desarrollo de Plataforma: 14[h]
Pruebas Finales: 3 [h]

Dylhan Aros: 

Analisis del Enunciado: 1 [h]
Modifiaciones y Ajustes al Modelo: 1 [h]
Diseño de Plataforma: 3 [h]
Desarrollo de Plataforma: 3 [h]
Pruebas Finales: 1 [h]


Gonzalo Lazen: 

Analisis del Enunciado: 1 [h]
Modifiaciones y Ajustes al Modelo: 1 [h]
Diseño de Plataforma: 3 [h]
Desarrollo de Plataforma: 3 [h]
Pruebas Finales: 1 [h]



